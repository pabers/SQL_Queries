### Exercise 3-1
### Retrieve the emplyee ID, first name, and last name for all bank employees. Sort by last name and then by first name

show tables;
DESC employee;
SELECT emp_id, fname, lname
FROM employee
ORDER BY lname, fname

### Exercise 3-2
### Retrieve the account ID, customer ID and available balance for all accounts whose status equals 'ACTIVE' and whose
### available balance is greater than $2,500

mysql> SELECT account_id, cust_id, avail_balance
    -> FROM account
    -> WHERE (status='ACTIVE') & (avail_balance>2500);
   
### Exercise 3-3
### Write a query against the account table that returns the IDs of the employees who opened the accounts.
### Include a single row for each distinct employee.

mysql> SELECT DISTINCT(open_emp_id)
    -> FROM account;
    
### Exercise 3-4
### Display the product_cd, cust_id, avail_balance where product type is an acount and order by product_cd then cust_id

mysql> SELECT p.product_cd, a.cust_id, a.avail_balance
    -> FROM product AS p INNER JOIN account AS a
    -> ON p.product_cd = a.product_cd
    -> WHERE p.product_type_cd = 'ACCOUNT'
    -> ORDER BY p.product_cd,a.cust_id;
    
### Exercise 4-3
### Construct a query that retrieves all acounts opened in 2002

mysql> SELECT account_id, product_cd, cust_id, open_date, avail_balance
    -> FROM account
    -> WHERE open_date REGEXP '^[2][0][0][2]';
    
 ### Exercise 4-4
 ### Construct a query that finds all nonbusiness customers whose last name contains an a in the second 
 ### position and an e anywhere after the a.
 
 mysql> SELECT *
    -> FROM customer c INNER JOIN individual i
    -> ON c.cust_id = i.cust_id
    -> WHERE (c.cust_type_cd = 'I') & (i.lname LIKE '_a%e%');
    
### Exercise 5-1
### Retrieve employee's id, firstname, lastname and the branch name

mysql> SELECT e.emp_id, e.fname, e.lname,b.name
    -> FROM employee e INNER JOIN branch b
    -> ON e.assigned_branch_id = b.branch_id;
    
### Exercise 5-2
### Write a query that returns the account ID for each nonbusiness customer with the customer's federal ID and the name of
### the product on which the account is based

mysql> SELECT a.account_id account, c.fed_id federal_number, p.name product
    -> FROM customer c INNER JOIN account a
    -> ON c.cust_id = a.cust_id
    -> INNER JOIN product p
    -> ON a.product_cd = p.product_cd;
    
### Exercise 5-3
### Construct a query that finds all employees whose supervisor is assigned to a different department. Retrieve the
### employees' ID, first name, and last name

mysql> SELECT e.emp_id, e.fname, e.lname
    -> FROM employee e INNER JOIN employee mgr
    -> ON e.superior_emp_id = mgr.emp_id
    -> WHERE e.dept_id != mgr.dept_id;
    
### Exercise 6-2
### Write a compound querythat finds the first and last names of all individual customers along with the first and 
### last names of all employees and sort by last name

mysql> SELECT fname, lname
    -> FROM individual
    -> UNION
    -> SELECT fname, lname
    -> FROM employee;
    -> ORDER BY lname
    
### Exercise 7-1
### Write a subquery that returns the 17th through 25th characters of the string 'Please find the substring in this string'

mysql> SELECT SUBSTRING('Please find the substring in this string',17,9)

### Exercise 7-2
### Write a query that returns the absolute value and sign (-1,0,1) of the number -25.76823.
### Also return the number rounded to the nearest hundredth.

mysql> SELECT ABS(-25.76823);
mysql> SELECT SIGN(-25.76823);
mysql> SELECT ROUND(-25.76823,2);

### Exercise 7-3
### Write a query to return just the month portion of the current date

mysql> SELECT EXTRACT(MONTH FROM CURRENT_DATE());

### Exercise 8-1
### Construct a query that counts the number of rows in the account table

mysql> SELECT COUNT(cust_id)
    -> FROM account;
    
### Exercise 8-2
### Modify your query from exercise 8-1 to count the number of accounts held by each customer
### Show the customer ID and the number of accounts for each customer

mysql> SELECT cust_id, COUNT(account_id)
    -> FROM account
    -> GROUP BY cust_id;
    
### Exercise 8-3
### Modify your query from exercise 8-2 to include only those customers having at least two accounts

mysql> SELECT cust_id, COUNT(account_id)
    -> FROM account
    -> GROUP BY cust_id
    -> HAVING COUNT(account_id)>=2
    
### Exercise 8-4
### Find the total available balance by product and branch where there is more than one
### account per product and branch. Order the results by total balance (highest to lowest).

mysql> SELECT product_cd product, open_branch_id branch, SUM(avail_balance) total_avail_balance
    -> FROM account
    -> GROUP BY product_cd, open_branch_id
    -> HAVING COUNT(product_cd) > 1
    -> ORDER BY total_avail_balance DESC;
    
### Exercise 9-1
### Construct a query against the account table that uses a filter condition with a noncorrelated subquery
### against the product table to find all loan accounts. Retrieve the account ID, product code, customer ID, 
### and available balance.

mysql> SELECT a.account_id, a.product_cd, a.cust_id, a.avail_balance
    -> FROM account a
    -> WHERE a.product_cd IN (SELECT p.product_cd FROM product p WHERE p.product_type_cd = 'LOAN');
    
### Exercise 9-2
### Rework the query from Exercise 9-1 using a correlated subquery against the product table to achieve the same results

mysql> SELECT a.account_id, a.product_cd, a.cust_id, a.avail_balance
    -> FROM account a
    -> WHERE EXISTS (SELECT 1
    ->    FROM product p
    ->    WHERE p.product_cd = a.product_cd
    ->    AND p.product_type_cd = 'LOAN')
    
### Exercise 9-3
### Show the experience level of each employee in a new column where 'trainee' is between 01/01/2004 and 31/12/2005,
### 'worker' is between 01/01/2002 and /31/12/2003 and 'mentor' is between 01/01/2000 and 31/12/2001
### Give the subquery the alias levels and include the employee ID, first name, last name and experience level.

mysql> SELECT e.emp_id, e.fname, e.lname, levels.name
    -> FROM employee e INNER JOIN (SELECT 'trainee' name, '2004-01-01' start_dt, '2005-12-31' end_dt
    -> UNION ALL
    -> SELECT 'worker' name, '2002-01-01' start_dt, '2003-12-31' end_dt
    -> UNION ALL
    -> SELECT 'mentor' name, '2000-01-01' start_dt, '2001-12-31' end_dt) levels
    -> ON e.start_date BETWEEN levels.start_dt AND end_dt;
    
### Exercise 9-4
### Construct a query against the employee table that retrieves the emploee ID, first name, and last name, along with
### the names of the department and brnach to which the employee is assigned. Do not join any tables.

mysql> SELECT e.emp_id, e.fname, e.lname,
    -> (SELECT d.name FROM department d
    -> WHERE d.dept_id = e.dept_id) dept_name,
    -> (SELECT b.name FROM branch b
    -> WHERE b.branch_id = e.assigned_branch_id) branch_name
    -> FROM employee e;
